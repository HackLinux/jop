(User) ChangeLog for wcet08. Please keep current.

Nov 08
---------
- 17/11/08: Use MethodRef instead of Pair<ClassInfo,String> (better API)
- 17/11/08: Cache miss penalty:
            Encode HIDDEN_LOAD_CYCLES in WCETInstruction
            Fix bug (length of invoker)
            Fix bug (use MIN_HIDDEN_LOAD_CYCLES instead of INVOKE_HIDDEN_LOAD_CYCLES)
- 17/11/08: Java implemented bytecodes:
            Add getJavaImpl (get java implementation of bytecode) to WcetAppInfo
            Callgraph takes java implemented bytecodes into account
            [NO THROW HACK] But not for f_*throw,f_new or f_*newarray, 
                            as we don't support exceptions yet
            

- 14/11/08: Create an Option class, for better easier option processing and better
            error handling of command line arguments.
- 14/11/08: Fix bug in graphutils.Dominators : Intersect (defined) predecessors,
            not their idoms, to find the idom of a node.

- 13/11/08: Factor out common preprocessing steps into WcetPreprocess.preprocess
- 13/11/08: Loop bound annotations now support lower and upper bound
- 13/11/08: Add support for DFA analysis (when config.doDfaAnalysis())
- 13/11/08: BasicBlock: fixed a bug in InstructionTargetVisitor.visitSelect

- 12/11/08: frontend: Rename JOPAppInfo to WcetAppInfo. It no longer inherits from AppInfo,
            but aggregates it. Run 'CreateMethodGenerators' after loading the classes.
            Don't use method.getCode(), but the methodGen.getInstructionList() everywhere.
            See NOTES [Setting MethodGen].
- 12/11/08: frontend: Make InstrField enum private and provide (static) getters
- 12/11/08: LpSolveWrapper: delete file before dumping .lp file

- 11/11/08: Callgraph: 
            Make sure a subgraph is only build once (fixes bug in presence of cyclic callgraphs).
- 11/11/08: Flowgraph:
		    * In flowgraph, graph-modifying operations now result in (lazy) re-analysis
            * Addedd new consistency checks: find dead code (currently non-fatal), 
              find stuck code (fatal)
            * Updated documentation

- 10/11/08: Bugfix (Child.java): 
			Implementation of a static method may be located in superclass.
			
- 10/11/08: Added optional dump of LP files (via lp_solve)
			(-dump-ilp yes|no, on by default)
